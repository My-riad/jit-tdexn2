/**
 * event-types.ts
 * 
 * This file defines standardized event types and categories used throughout 
 * the platform's microservices for consistent event-driven communication.
 * 
 * It provides a centralized definition of all possible event types and their
 * categorization to ensure uniform event handling across the system.
 */

/**
 * Categorizes events by their domain for appropriate routing and processing
 * Used by the event bus to route messages to appropriate consumers
 */
export enum EventCategories {
  DRIVER = 'DRIVER',
  LOAD = 'LOAD',
  POSITION = 'POSITION',
  ASSIGNMENT = 'ASSIGNMENT',
  OPTIMIZATION = 'OPTIMIZATION',
  GAMIFICATION = 'GAMIFICATION',
  NOTIFICATION = 'NOTIFICATION',
  MARKET = 'MARKET',
  SYSTEM = 'SYSTEM',
  INTEGRATION = 'INTEGRATION',
  GEOFENCE = 'GEOFENCE'
}

/**
 * Detailed event types for specific event scenarios across the platform
 * Used for consistent event handling across all microservices
 */
export enum EventTypes {
  // Driver related events
  DRIVER_CREATED = 'DRIVER_CREATED',
  DRIVER_UPDATED = 'DRIVER_UPDATED',
  DRIVER_DELETED = 'DRIVER_DELETED',
  DRIVER_STATUS_CHANGED = 'DRIVER_STATUS_CHANGED',
  DRIVER_AVAILABILITY_CHANGED = 'DRIVER_AVAILABILITY_CHANGED',
  DRIVER_HOS_UPDATED = 'DRIVER_HOS_UPDATED',
  DRIVER_LOCATION_UPDATED = 'DRIVER_LOCATION_UPDATED',
  DRIVER_SCORE_UPDATED = 'DRIVER_SCORE_UPDATED',
  DRIVER_ACHIEVEMENT_EARNED = 'DRIVER_ACHIEVEMENT_EARNED',
  
  // Load related events
  LOAD_CREATED = 'LOAD_CREATED',
  LOAD_UPDATED = 'LOAD_UPDATED',
  LOAD_DELETED = 'LOAD_DELETED',
  LOAD_STATUS_CHANGED = 'LOAD_STATUS_CHANGED',
  LOAD_ASSIGNED = 'LOAD_ASSIGNED',
  LOAD_UNASSIGNED = 'LOAD_UNASSIGNED',
  LOAD_COMPLETED = 'LOAD_COMPLETED',
  LOAD_CANCELLED = 'LOAD_CANCELLED',
  
  // Position related events
  POSITION_UPDATED = 'POSITION_UPDATED',
  POSITION_HISTORY_RECORDED = 'POSITION_HISTORY_RECORDED',
  
  // Assignment related events
  ASSIGNMENT_CREATED = 'ASSIGNMENT_CREATED',
  ASSIGNMENT_UPDATED = 'ASSIGNMENT_UPDATED',
  ASSIGNMENT_COMPLETED = 'ASSIGNMENT_COMPLETED',
  ASSIGNMENT_CANCELLED = 'ASSIGNMENT_CANCELLED',
  
  // Optimization related events
  OPTIMIZATION_REQUESTED = 'OPTIMIZATION_REQUESTED',
  OPTIMIZATION_COMPLETED = 'OPTIMIZATION_COMPLETED',
  SMART_HUB_IDENTIFIED = 'SMART_HUB_IDENTIFIED',
  RELAY_PLAN_CREATED = 'RELAY_PLAN_CREATED',
  
  // Gamification related events
  SCORE_UPDATED = 'SCORE_UPDATED',
  ACHIEVEMENT_EARNED = 'ACHIEVEMENT_EARNED',
  LEADERBOARD_UPDATED = 'LEADERBOARD_UPDATED',
  BONUS_ZONE_CREATED = 'BONUS_ZONE_CREATED',
  BONUS_ZONE_UPDATED = 'BONUS_ZONE_UPDATED',
  BONUS_ZONE_EXPIRED = 'BONUS_ZONE_EXPIRED',
  
  // Notification related events
  NOTIFICATION_CREATED = 'NOTIFICATION_CREATED',
  NOTIFICATION_DELIVERED = 'NOTIFICATION_DELIVERED',
  NOTIFICATION_READ = 'NOTIFICATION_READ',
  
  // Market related events
  MARKET_RATE_UPDATED = 'MARKET_RATE_UPDATED',
  DEMAND_FORECAST_UPDATED = 'DEMAND_FORECAST_UPDATED',
  HOTSPOT_IDENTIFIED = 'HOTSPOT_IDENTIFIED',
  AUCTION_CREATED = 'AUCTION_CREATED',
  AUCTION_BID_PLACED = 'AUCTION_BID_PLACED',
  AUCTION_COMPLETED = 'AUCTION_COMPLETED',
  
  // System related events
  SYSTEM_ERROR = 'SYSTEM_ERROR',
  SYSTEM_WARNING = 'SYSTEM_WARNING',
  SYSTEM_INFO = 'SYSTEM_INFO',
  SERVICE_STATUS_CHANGED = 'SERVICE_STATUS_CHANGED',
  
  // Integration related events
  ELD_CONNECTED = 'ELD_CONNECTED',
  ELD_DISCONNECTED = 'ELD_DISCONNECTED',
  ELD_DATA_RECEIVED = 'ELD_DATA_RECEIVED',
  TMS_CONNECTED = 'TMS_CONNECTED',
  TMS_DISCONNECTED = 'TMS_DISCONNECTED',
  TMS_DATA_RECEIVED = 'TMS_DATA_RECEIVED',
  PAYMENT_PROCESSED = 'PAYMENT_PROCESSED',
  PAYMENT_FAILED = 'PAYMENT_FAILED',
  
  // Geofence related events
  GEOFENCE_ENTERED = 'GEOFENCE_ENTERED',
  GEOFENCE_EXITED = 'GEOFENCE_EXITED',
  
  // ETA related events
  ETA_UPDATED = 'ETA_UPDATED'
}