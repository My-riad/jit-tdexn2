apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: default
  labels:
    app: api-gateway
    component: api-gateway
    part-of: freight-optimization
  annotations:
    description: "API Gateway for the AI-driven Freight Optimization Platform"
spec:
  replicas: 3
  selector:
    matchLabels:
      app: api-gateway
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: api-gateway
        component: api-gateway
        part-of: freight-optimization
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "3000"
        prometheus.io/path: "/metrics"
    spec:
      containers:
      - name: api-gateway
        image: {{ .Values.image.repository }}/api-gateway:{{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "3000"
        - name: CORS_ORIGIN
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: CORS_ORIGIN
        - name: RATE_LIMIT_MAX
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: RATE_LIMIT_MAX
        - name: RATE_LIMIT_WINDOW_MS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: RATE_LIMIT_WINDOW_MS
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: LOG_LEVEL
        - name: REDIS_HOST
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: REDIS_HOST
        - name: REDIS_PORT
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: REDIS_PORT
        - name: AUTH_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: AUTH_SERVICE_URL
        - name: DRIVER_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: DRIVER_SERVICE_URL
        - name: LOAD_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: LOAD_SERVICE_URL
        - name: LOAD_MATCHING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: LOAD_MATCHING_SERVICE_URL
        - name: TRACKING_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: TRACKING_SERVICE_URL
        - name: GAMIFICATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: GAMIFICATION_SERVICE_URL
        - name: MARKET_INTELLIGENCE_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: MARKET_INTELLIGENCE_SERVICE_URL
        - name: NOTIFICATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: NOTIFICATION_SERVICE_URL
        - name: OPTIMIZATION_ENGINE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: OPTIMIZATION_ENGINE_URL
        - name: INTEGRATION_SERVICE_URL
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: INTEGRATION_SERVICE_URL
        - name: SERVICE_HEALTH_CHECK_INTERVAL_MS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: SERVICE_HEALTH_CHECK_INTERVAL_MS
        - name: SERVICE_TIMEOUT_MS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: SERVICE_TIMEOUT_MS
        - name: CIRCUIT_BREAKER_FAILURE_THRESHOLD
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: CIRCUIT_BREAKER_FAILURE_THRESHOLD
        - name: CIRCUIT_BREAKER_RESET_TIMEOUT_MS
          valueFrom:
            configMapKeyRef:
              name: api-gateway-config
              key: CIRCUIT_BREAKER_RESET_TIMEOUT_MS
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: api-gateway-secrets
              key: JWT_SECRET
        - name: API_KEYS_SECRET
          valueFrom:
            secretKeyRef:
              name: api-gateway-secrets
              key: API_KEYS_SECRET
        resources:
          requests:
            cpu: "0.5"
            memory: "1Gi"
          limits:
            cpu: "1"
            memory: "2Gi"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        volumeMounts:
        - name: config-volume
          mountPath: /usr/src/app/config
        - name: tmp-volume
          mountPath: /tmp
      volumes:
      - name: config-volume
        configMap:
          name: api-gateway-config
      - name: tmp-volume
        emptyDir: {}
      nodeSelector:
        role: application
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - api-gateway
              topologyKey: kubernetes.io/hostname
      terminationGracePeriodSeconds: 60
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000