apiVersion: apps/v1
kind: Deployment
metadata:
  name: market-intelligence-service
  namespace: default
  labels:
    app: market-intelligence-service
    component: market-intelligence
    part-of: freight-optimization
  annotations:
    description: "Market Intelligence Service that analyzes market conditions and adjusts pricing based on supply/demand dynamics"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: market-intelligence-service
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: market-intelligence-service
        component: market-intelligence
        part-of: freight-optimization
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/path: "/metrics"
        prometheus.io/port: "3000"
    spec:
      containers:
      - name: market-intelligence-service
        image: "{{ .Values.image.repository }}/market-intelligence-service:{{ .Values.image.tag }}"
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        resources:
          requests:
            cpu: "100m"
            memory: "256Mi"
          limits:
            cpu: "500m"
            memory: "512Mi"
        envFrom:
        - configMapRef:
            name: market-intelligence-service-config
        env:
        - name: NODE_ENV
          value: "production"
        - name: SERVICE_NAME
          value: "market-intelligence-service"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-credentials
              key: password
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: redis-credentials
              key: password
        - name: EXTERNAL_MARKET_DATA_API_KEY
          valueFrom:
            secretKeyRef:
              name: external-api-keys
              key: market-data-api-key
        - name: AWS_ACCESS_KEY_ID
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: access-key-id
        - name: AWS_SECRET_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: aws-credentials
              key: secret-access-key
        livenessProbe:
          httpGet:
            path: /health/liveness
            port: http
          initialDelaySeconds: 30
          periodSeconds: 15
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/readiness
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 3
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tmp
          mountPath: /tmp
        - name: market-data-cache
          mountPath: /app/cache
      volumes:
      - name: tmp
        emptyDir: {}
      - name: market-data-cache
        emptyDir: {}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      terminationGracePeriodSeconds: 60
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - market-intelligence-service
              topologyKey: kubernetes.io/hostname